{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan_srivastava\\\\data\\\\personal project\\\\qr ordering\\\\qr-menu-frontend\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  // Fetch all orders\n  useEffect(() => {\n    fetch(\"http://localhost:8084/api/order/getAllOrders\").then(res => res.json()).then(data => setOrders(data)).catch(err => console.error(\"Error fetching orders:\", err));\n  }, []);\n  const handleServed = orderId => {\n    fetch(`http://localhost:8084/api/order/${orderId}/isDone`, {\n      method: 'POST' // or PUT, check API specifications\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      // Optionally refresh the list or update the UI accordingly\n      setOrders(orders => orders.filter(order => order.id !== orderId));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const filteredOrders = filter ? orders.filter(order => order.tableId === filter) : orders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: filter,\n      onChange: e => setFilter(e.target.value),\n      placeholder: \"Filter by table ID (e.g., T2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Table \", order.tableId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.menuItemName, \" x \", item.quantity]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleServed(order.id),\n          children: \"Served\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"G6y9zeRlIQdD+xnFdIuXWk6+Pwo=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Admin","_s","orders","setOrders","filter","setFilter","fetch","then","res","json","data","catch","err","console","error","handleServed","orderId","method","response","log","order","id","filteredOrders","tableId","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","orderItems","item","menuItemName","quantity","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aryan_srivastava/data/personal project/qr ordering/qr-menu-frontend/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Admin = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    // Fetch all orders\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8084/api/order/getAllOrders\")\r\n            .then(res => res.json())\r\n            .then(data => setOrders(data))\r\n            .catch(err => console.error(\"Error fetching orders:\", err));\r\n    }, []);\r\n\r\n    const handleServed = (orderId) => {\r\n        fetch(`http://localhost:8084/api/order/${orderId}/isDone`, {\r\n            method: 'POST', // or PUT, check API specifications\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n            // Optionally refresh the list or update the UI accordingly\r\n            setOrders(orders => orders.filter(order => order.id !== orderId));\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    };\r\n\r\n    const filteredOrders = filter ? orders.filter(order => order.tableId === filter) : orders;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={e => setFilter(e.target.value)}\r\n                placeholder=\"Filter by table ID (e.g., T2)\"\r\n            />\r\n            <div>\r\n                {filteredOrders.map(order => (\r\n                    <div key={order.id}>\r\n                        <h2>Table {order.tableId}</h2>\r\n                        <ul>\r\n                            {order.orderItems.map(item => (\r\n                                <li key={item.id}>{item.menuItemName} x {item.quantity}</li>\r\n                            ))}\r\n                        </ul>\r\n                        <button onClick={() => handleServed(order.id)}>Served</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}