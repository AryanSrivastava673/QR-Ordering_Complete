{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import { useTableContext } from './TableContext';\n\n// const TableRouterContextUpdater = () => {\n//     const { setTableNo } = useTableContext();\n//     const location = useLocation();\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         const tableNoFromPath = location.pathname.split('/')[1]; // Assuming URL is like /T1\n//         if (tableNoFromPath) {\n//             setTableNo(tableNoFromPath);\n//         } else {\n//             navigate('/T2', { replace: true });  // Default navigation if no tableNo in path\n//         }\n//     }, [location, navigate, setTableNo]);\n\n//     return null; // Component does not render anything\n// };\n\n// export default TableRouterContextUpdater;\n\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTableContext } from './TableContext';\nexport const TableRouterContextUpdater = () => {\n  _s();\n  const {\n    setTableNo\n  } = useTableContext();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const tableNoFromPath = location.pathname.split('/')[1]; // Assuming URL is like /T1\n    if (tableNoFromPath) {\n      setTableNo(tableNoFromPath);\n    } else {\n      navigate('/T2', {\n        replace: true\n      }); // Default navigation if no tableNo in path\n    }\n  }, [location, navigate, setTableNo]);\n  return null; // Component does not render anything\n};\n_s(TableRouterContextUpdater, \"cVt0HvGuhyQsy8RAnfVlcPZr12g=\", false, function () {\n  return [useTableContext, useLocation, useNavigate];\n});\n_c = TableRouterContextUpdater;\nvar _c;\n$RefreshReg$(_c, \"TableRouterContextUpdater\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","useTableContext","TableRouterContextUpdater","_s","setTableNo","location","navigate","tableNoFromPath","pathname","split","replace","_c","$RefreshReg$"],"sources":["C:/Users/aryan_srivastava/data/personal project/qr ordering/qr-menu-frontend/src/context/TableRouterContextUpdater.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import { useTableContext } from './TableContext';\r\n\r\n// const TableRouterContextUpdater = () => {\r\n//     const { setTableNo } = useTableContext();\r\n//     const location = useLocation();\r\n//     const navigate = useNavigate();\r\n\r\n//     useEffect(() => {\r\n//         const tableNoFromPath = location.pathname.split('/')[1]; // Assuming URL is like /T1\r\n//         if (tableNoFromPath) {\r\n//             setTableNo(tableNoFromPath);\r\n//         } else {\r\n//             navigate('/T2', { replace: true });  // Default navigation if no tableNo in path\r\n//         }\r\n//     }, [location, navigate, setTableNo]);\r\n\r\n//     return null; // Component does not render anything\r\n// };\r\n\r\n// export default TableRouterContextUpdater;\r\n\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useTableContext } from './TableContext';\r\n\r\nexport const TableRouterContextUpdater = () => {\r\n    const { setTableNo } = useTableContext();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const tableNoFromPath = location.pathname.split('/')[1]; // Assuming URL is like /T1\r\n        if (tableNoFromPath) {\r\n            setTableNo(tableNoFromPath);\r\n        } else {\r\n            navigate('/T2', { replace: true });  // Default navigation if no tableNo in path\r\n        }\r\n    }, [location, navigate, setTableNo]);\r\n\r\n    return null; // Component does not render anything\r\n};"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAW,CAAC,GAAGH,eAAe,CAAC,CAAC;EACxC,MAAMI,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMS,eAAe,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,IAAIF,eAAe,EAAE;MACjBH,UAAU,CAACG,eAAe,CAAC;IAC/B,CAAC,MAAM;MACHD,QAAQ,CAAC,KAAK,EAAE;QAAEI,OAAO,EAAE;MAAK,CAAC,CAAC,CAAC,CAAE;IACzC;EACJ,CAAC,EAAE,CAACL,QAAQ,EAAEC,QAAQ,EAAEF,UAAU,CAAC,CAAC;EAEpC,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CAfWD,yBAAyB;EAAA,QACXD,eAAe,EACrBD,WAAW,EACXD,WAAW;AAAA;AAAAY,EAAA,GAHnBT,yBAAyB;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}