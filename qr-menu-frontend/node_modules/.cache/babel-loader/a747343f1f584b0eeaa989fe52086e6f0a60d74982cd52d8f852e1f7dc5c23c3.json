{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan_srivastava\\\\data\\\\personal project\\\\qr ordering\\\\qr-menu-frontend\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8084/api/admin/tables').then(response => setTables(response.data)).catch(error => console.error('Error fetching tables', error));\n  }, []);\n  const fetchOrders = tableId => {\n    axios.get(`http://localhost:8084/api/order/getOrders/${tableId}`).then(response => setOrders(response.data)).catch(error => console.error('Error fetching orders', error));\n  };\n  const handleTableClick = tableId => {\n    setSelectedTable(tableId);\n    fetchOrders(tableId);\n  };\n  const handleCheckout = async tableId => {\n    if (window.confirm('Are you sure you want to checkout and clear all orders for this table?')) {\n      try {\n        const response = await axios.delete(`http://localhost:8084/api/receipt/${tableId}/checkout`);\n        const receipt = response.data;\n        // Navigate to the Receipt page with state\n        props.history.push(\"/receipt/\" + tableId, {\n          receipt: receipt\n        });\n      } catch (error) {\n        console.error('Error checking out', error);\n      }\n    }\n  };\n  const handleToggleServed = async order => {\n    if (!order.done) {\n      try {\n        // Assuming the API sets the order to \"done\" and returns the updated order\n        const response = await axios.post(`http://localhost:8084/api/order/${order.id}/isDone`);\n        if (response.status === 200) {\n          const updatedOrder = response.data;\n\n          // Update orders state\n          const updatedOrders = orders.map(ord => ord.id === order.id ? {\n            ...ord,\n            done: updatedOrder.done\n          } : ord);\n          setOrders(updatedOrders);\n        }\n      } catch (error) {\n        console.error('Failed to update order status', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-grid\",\n      children: tables.map(table => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTableClick(table),\n        children: [\"Table ID: \", table]\n      }, table, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      style: {\n        maxHeight: '70%',\n        overflowY: 'scroll'\n      },\n      children: [selectedTable && orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order ID: \", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.menuItemName, \" x \", item.quantity]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Served:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: order.done,\n            onChange: () => handleToggleServed(order),\n            disabled: order.done // Disables checkbox if already served\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)), selectedTable && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCheckout(selectedTable),\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"YNwuvgfhRjasfpxuvUEAIECG3D0=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Admin","_s","tables","setTables","selectedTable","setSelectedTable","orders","setOrders","get","then","response","data","catch","error","console","fetchOrders","tableId","handleTableClick","handleCheckout","window","confirm","delete","receipt","props","history","push","handleToggleServed","order","done","post","id","status","updatedOrder","updatedOrders","map","ord","children","fileName","_jsxFileName","lineNumber","columnNumber","className","table","onClick","style","maxHeight","overflowY","orderItems","item","menuItemName","quantity","type","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aryan_srivastava/data/personal project/qr ordering/qr-menu-frontend/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Admin.css';\r\n\r\nfunction Admin() {\r\n    const [tables, setTables] = useState([]);\r\n    const [selectedTable, setSelectedTable] = useState(null);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8084/api/admin/tables')\r\n            .then(response => setTables(response.data))\r\n            .catch(error => console.error('Error fetching tables', error));\r\n    }, []);\r\n\r\n    const fetchOrders = (tableId) => {\r\n        axios.get(`http://localhost:8084/api/order/getOrders/${tableId}`)\r\n            .then(response => setOrders(response.data))\r\n            .catch(error => console.error('Error fetching orders', error));\r\n    };\r\n\r\n    const handleTableClick = (tableId) => {\r\n        setSelectedTable(tableId);\r\n        fetchOrders(tableId);\r\n    };\r\n\r\n    const handleCheckout = async (tableId) => {\r\n        if (window.confirm('Are you sure you want to checkout and clear all orders for this table?')) {\r\n            try {\r\n                const response = await axios.delete(`http://localhost:8084/api/receipt/${tableId}/checkout`);\r\n                const receipt = response.data;\r\n                // Navigate to the Receipt page with state\r\n                props.history.push(\"/receipt/\" + tableId, { receipt: receipt });\r\n            } catch (error) {\r\n                console.error('Error checking out', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleToggleServed = async (order) => {\r\n        if (!order.done) {\r\n            try {\r\n                // Assuming the API sets the order to \"done\" and returns the updated order\r\n                const response = await axios.post(`http://localhost:8084/api/order/${order.id}/isDone`);\r\n                if (response.status === 200) {\r\n                    const updatedOrder = response.data;\r\n\r\n                    // Update orders state\r\n                    const updatedOrders = orders.map(ord =>\r\n                        ord.id === order.id ? { ...ord, done: updatedOrder.done } : ord\r\n                    );\r\n                    setOrders(updatedOrders);\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to update order status', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Admin Dashboard</h2>\r\n            <div className=\"tables-grid\">\r\n                {tables.map(table => (\r\n                    <button key={table} onClick={() => handleTableClick(table)}>\r\n                        Table ID: {table}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"orders-container\" style={{ maxHeight: '70%', overflowY: 'scroll' }}>\r\n                {selectedTable && orders.map(order => (\r\n                    <div key={order.id}>\r\n                        <p>Order ID: {order.id}</p>\r\n                        <div>\r\n                            {/* <h2>Table {order.tableId}</h2> */}\r\n                            <ul>\r\n                                {order.orderItems.map(item => (\r\n                                    <li key={item.id}>{item.menuItemName} x {item.quantity}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        {/* <button className=\"served-button\" onClick={() => handleServed(order.id)}>âœ” Served</button> */}\r\n                        <p>Served:\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={order.done}\r\n                                onChange={() => handleToggleServed(order)}\r\n                                disabled={order.done} // Disables checkbox if already served\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n                {selectedTable && <button onClick={() => handleCheckout(selectedTable)}>Checkout</button>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}