{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan_srivastava\\\\data\\\\personal project\\\\qr ordering\\\\qr-menu-frontend\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [filter, setFilter] = useState('');\n  const handleServed = orderId => {\n    fetch(`http://localhost:8084/api/order/${orderId}/isDone`, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      // Re-fetch orders after one is marked as served.\n      fetchOrders();\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  // Function to fetch orders\n  const fetchOrders = () => {\n    fetch(\"http://localhost:8084/api/order/getAllOrders\").then(res => res.json()).then(data => setOrders(data)).catch(err => console.error(\"Error fetching orders:\", err));\n  };\n\n  // Fetch orders initially and every time the filter changes\n  useEffect(() => {\n    fetchOrders();\n  }, [filter]);\n  const filteredOrders = filter ? orders.filter(order => order.tableId === filter) : orders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"filter-input\",\n      type: \"text\",\n      value: filter,\n      onChange: e => setFilter(e.target.value),\n      placeholder: \"Filter by table ID (e.g., T2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard\",\n      children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Table \", order.tableId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.menuItemName, \" x \", item.quantity]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"served-button\",\n          onClick: () => handleServed(order.id),\n          children: \"\\u2714 Served\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"G6y9zeRlIQdD+xnFdIuXWk6+Pwo=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Admin","_s","orders","setOrders","filter","setFilter","handleServed","orderId","fetch","method","then","response","json","data","console","log","fetchOrders","catch","error","res","err","filteredOrders","order","tableId","children","className","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","orderItems","item","menuItemName","quantity","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aryan_srivastava/data/personal project/qr ordering/qr-menu-frontend/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Admin.css'\r\n\r\nconst Admin = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n    const handleServed = (orderId) => {\r\n        fetch(`http://localhost:8084/api/order/${orderId}/isDone`, {\r\n            method: 'POST',\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Success:', data);\r\n            // Re-fetch orders after one is marked as served.\r\n            fetchOrders();\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    };\r\n    \r\n    // Function to fetch orders\r\n    const fetchOrders = () => {\r\n        fetch(\"http://localhost:8084/api/order/getAllOrders\")\r\n            .then(res => res.json())\r\n            .then(data => setOrders(data))\r\n            .catch(err => console.error(\"Error fetching orders:\", err));\r\n    }\r\n    \r\n    // Fetch orders initially and every time the filter changes\r\n    useEffect(() => {\r\n        fetchOrders();\r\n    }, [filter]);\r\n    const filteredOrders = filter ? orders.filter(order => order.tableId === filter) : orders;\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"filter-input\"\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={e => setFilter(e.target.value)}\r\n                placeholder=\"Filter by table ID (e.g., T2)\"\r\n            />\r\n            <div className=\"admin-dashboard\">\r\n\r\n                {filteredOrders.map(order => (\r\n                    <div key={order.id} className=\"order-card\">\r\n                        <h2>Table {order.tableId}</h2>\r\n                        <ul>\r\n                            {order.orderItems.map(item => (\r\n                                <li key={item.id}>{item.menuItemName} x {item.quantity}</li>\r\n                            ))}\r\n                        </ul>\r\n                        <button className=\"served-button\" onClick={() => handleServed(order.id)}>\r\n                            âœ” Served\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}