{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan_srivastava\\\\data\\\\personal project\\\\qr ordering\\\\qr-menu-frontend\\\\src\\\\components\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Admin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8084/api/admin/tables').then(response => setTables(response.data)).catch(error => console.error('Error fetching tables', error));\n  }, []);\n  const fetchOrders = tableId => {\n    axios.get(`http://localhost:8084/api/orders/getOrders/${tableId}`).then(response => setOrders(response.data)).catch(error => console.error('Error fetching orders', error));\n  };\n  const handleTableClick = tableId => {\n    setSelectedTable(tableId);\n    fetchOrders(tableId);\n  };\n  const handleCheckout = tableId => {\n    if (window.confirm('Are you sure you want to checkout and clear all orders for this table?')) {\n      axios.delete(`/api/orders/${tableId}`).then(() => {\n        fetchOrders(tableId); // Refresh orders which should be empty now\n        alert('Checked out successfully.');\n      }).catch(error => console.error('Error checking out', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-grid\",\n      children: tables.map(table => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTableClick(table),\n        children: [\"Table ID: \", table]\n      }, table, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      style: {\n        maxHeight: '300px',\n        overflowY: 'scroll'\n      },\n      children: [selectedTable && orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order ID: \", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Served: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: order.done,\n            onChange: () => {/* implement toggle logic here */}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), selectedTable && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCheckout(selectedTable),\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"YNwuvgfhRjasfpxuvUEAIECG3D0=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Admin","_s","tables","setTables","selectedTable","setSelectedTable","orders","setOrders","get","then","response","data","catch","error","console","fetchOrders","tableId","handleTableClick","handleCheckout","window","confirm","delete","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","table","onClick","style","maxHeight","overflowY","order","id","type","checked","done","onChange","_c","$RefreshReg$"],"sources":["C:/Users/aryan_srivastava/data/personal project/qr ordering/qr-menu-frontend/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Admin.css'\r\n\r\nfunction Admin() {\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8084/api/admin/tables')\r\n      .then(response => setTables(response.data))\r\n      .catch(error => console.error('Error fetching tables', error));\r\n  }, []);\r\n\r\n  const fetchOrders = (tableId) => {\r\n    axios.get(`http://localhost:8084/api/orders/getOrders/${tableId}`)\r\n      .then(response => setOrders(response.data))\r\n      .catch(error => console.error('Error fetching orders', error));\r\n  };\r\n\r\n  const handleTableClick = (tableId) => {\r\n    setSelectedTable(tableId);\r\n    fetchOrders(tableId);\r\n  };\r\n\r\n  const handleCheckout = (tableId) => {\r\n    if (window.confirm('Are you sure you want to checkout and clear all orders for this table?')) {\r\n      axios.delete(`/api/orders/${tableId}`)\r\n        .then(() => {\r\n          fetchOrders(tableId); // Refresh orders which should be empty now\r\n          alert('Checked out successfully.');\r\n        })\r\n        .catch(error => console.error('Error checking out', error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      <div className=\"tables-grid\">\r\n        {tables.map(table => (\r\n          <button key={table} onClick={() => handleTableClick(table)}>\r\n            Table ID: {table}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"orders-container\" style={{ maxHeight: '300px', overflowY: 'scroll' }}>\r\n        {selectedTable && orders.map(order => (\r\n          <div key={order.id}>\r\n            <p>Order ID: {order.id}</p>\r\n            <p>Served: <input type=\"checkbox\" checked={order.done} onChange={() => {/* implement toggle logic here */}} /></p>\r\n          </div>\r\n        ))}\r\n        {selectedTable && <button onClick={() => handleCheckout(selectedTable)}>Checkout</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}